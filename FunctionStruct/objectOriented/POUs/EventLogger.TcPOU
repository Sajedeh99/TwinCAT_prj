<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EventLogger" Id="{08cbf15c-8688-4dd9-ab6b-e1a448de205a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EventLogger
VAR
	EventBuffer : ARRAY[1..MAXIMUM_SIZE_OF_EVENT_BUFFER] OF ST_Event;
	CurrentEventBufferIndex : INT := 0;
	_PersistentEventLogger : I_PersistentEventStorage; // (2) store the reference to interface locally in FB
END_VAR
VAR CONSTANT
	MAXIMUM_SIZE_OF_EVENT_BUFFER : INT := 100;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddEvent" Id="{e49f4b21-dfc7-438e-a953-7966645755e4}">
      <Declaration><![CDATA[// Returns True if Add was successful and False if the buffer is full
METHOD PUBLIC AddEvent : BOOL
VAR_INPUT
	eEventType : E_EventType;
	eEventSeverity : TcEventSeverity;
	nEventIdentity : UDINT;
	sEventText : STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEventBufferFull() THEN
	CurrentEventBufferIndex := CurrentEventBufferIndex + 1;
	EventBuffer[CurrentEventBufferIndex].eEventType := eEventType;
	EventBuffer[CurrentEventBufferIndex].eEventSeverity := eEventSeverity;
	EventBuffer[CurrentEventBufferIndex].nEventIdentity := nEventIdentity;
	EventBuffer[CurrentEventBufferIndex].sEventText := sEventText;
	UpdateEventTimestampWithSystemTime(stEvent := EventBuffer[CurrentEventBufferIndex]); 
// this function will take a reference to this buffer location and update dtTimastamp of Event
	AddEvent := TRUE;
ELSE
	AddEvent := FALSE;
END_IF
// Here we want to store our Events persistently
_PersistentEventLogger.StoreEvent(stEvent := EventBuffer[CurrentEventBufferIndex]);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{6cf4241f-932f-4b8b-b3cc-1e543ad81590}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iPersitentEventStorage : I_PersistentEventStorage; // (1) reference to the interface
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_PersistentEventLogger := iPersitentEventStorage; // (3)]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsEventBufferFull" Id="{2b2e068d-0933-4786-8ed4-5fa954dc4519}">
      <Declaration><![CDATA[METHOD PRIVATE IsEventBufferFull : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (CurrentEventBufferIndex + 1) > MAXIMUM_SIZE_OF_EVENT_BUFFER THEN
	IsEventBufferFull := TRUE;
ELSE
	IsEventBufferFull := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EventLogger">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.AddEvent">
      <LineId Id="5" Count="0" />
      <LineId Id="15" Count="6" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="30" Count="1" />
    </LineIds>
    <LineIds Name="EventLogger.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="EventLogger.IsEventBufferFull">
      <LineId Id="6" Count="1" />
      <LineId Id="9" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>